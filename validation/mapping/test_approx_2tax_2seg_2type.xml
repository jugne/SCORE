<beast version="2.0"
       namespace="beast.pkgmgmt:beast.base.core:beast.base.inference
                 :beast.core.util
                 :beast.core.parameter
                 :beast.evolution.alignment
                 :beast.evolution.likelihood
                 :beast.evolution.tree
                 :beast.evolution.tree.coalescent
                 :beast.evolution.sitemodel
                 :beast.evolution.substitutionmodel
                 :beast.evolution.operators
                 :beast.math.distributions
                 :feast.simulation
                 :coalre.network
                 :coalre.statistics
                 :coalre.simulator
                 :coalre.operators
                 :coalre.distribution
		 :beast.mascotextended.structuredcoalescentnetwork.distribution
		 :beast.mascotextended.structuredcoalescentnetwork.simulator
		 :beast.mascotextended.structuredcoalescentnetwork.math
		 :structuredCoalescentNetwork.distribution
		 :structuredCoalescentNetwork.simulator
		 :structuredCoalescentNetwork.math
		 :structuredCoalescentNetwork.dynamics
		 :structuredCoalescentNetwork.mapping
		 :structuredCoalescentNetwork.logger
		 :beast.mascot.dynamics">

			<traitSet spec="TraitSet" traitname="date-backward" id="traitSet">
                    <taxa spec="TaxonSet" id="taxonSet">
                        <taxon spec="Taxon" id="t1"/>
                        <taxon spec="Taxon" id="t2"/>
                    </taxa>

                    t1=0, t2=0.1
                </traitSet>



    <run spec="MCMC" chainLength="10000000"> 
    
    <distribution id="coalDensity" spec="SCORE" network="@network">
            <networkIntervals spec="StructuredNetworkIntervals" id="StructuredNetworkIntervals" network="@network"/>
            <dynamics id="constantReassort" spec="structuredCoalescentNetwork.dynamics.ConstantReassortment" dimension="2">
		<structuredCoalescentDynamics id="structuredCoalescentDynamics" spec="beast.mascot.dynamics.Constant" dimension="2" fromBeauti="false">
				<Ne spec="RealParameter" id="Ne" dimension="2" value="1.0"/>
				<backwardsMigration spec="RealParameter" id="backwardsMigration" dimension="2" value="0.5"/>
        			<typeTrait spec="TraitSet" traitname="type" id="typeTrait">
            				<taxa idref="taxonSet"/>

            				t1=0, t2=1
        			</typeTrait>
				</structuredCoalescentDynamics>
				<typeTrait idref="typeTrait"/>
				<reassortmentRates spec="RealParameter" id="reassortmentRates" dimension="2" value="0.5"/>
			</dynamics>
		</distribution>

        <state>
            <stateNode id="network" spec="SimulatedCoalescentNetwork" nSegments="2" enableSegmentTreeUpdate="false">
                <populationModel spec="ConstantPopulation">
                    <popSize spec="RealParameter" value="1.0"/>
                </populationModel>
                <reassortmentRate spec="RealParameter" value="0.5"/>

			<traitSet idref="traitSet"/>
            </stateNode>
            <stateNode spec="MappedNetwork" id="mappedNet" untypedNetwork="@network" dynamics="@constantReassort"/>
        </state>



       <operator id="AddRemoveReassortment" spec="AddRemoveReassortment" network="@network" alpha="1.0" weight="1.0">
        </operator> 

  <operator id="DivertSegmentOperator" spec="DivertSegmentOperator" network="@network" weight="1.0"/>

	<operator id="UniformNetworkNodeHeightOperator" spec="UniformNetworkNodeHeightOperator" network="@network" weight="1.0"/>

	<operator id="SubNetworkSlide" spec="SubNetworkSlide" network="@network" weight="1.0"/>

        <operator id="NetworkScale" spec="NetworkScaleOperator"
                  network="@network" weight="1.0"/>

        <operator id="NetworkScaleRootOnly" spec="NetworkScaleOperator"
                  network="@network" scaleRootOnly="true" weight="1.0"/>

	<operator spec="NetworkExchange" network="@network" isNarrow="true" weight="1.0"/>

	<operator spec="NetworkExchange" network="@network" isNarrow="false" weight="1.0"/> 

        <logger spec="Logger" logEvery="100" mode="tree" fileName="$(filebase).trees">
            <log idref="network"/>
        </logger>

        <logger spec="Logger" logEvery="100" fileName="$(filebase).log">
            <log spec="NetworkStatsLogger" network="@network"/>
        </logger>

        <logger spec="Logger" logEvery="100">
            <log spec="NetworkStatsLogger" network="@network"/>
        </logger>
        
        <logger spec="Logger" logEvery="100" mode="tree" fileName="$(filebase).typed.trees">
            <log idref="mappedNet"/>
        </logger>
        
        <logger spec="Logger" logEvery="100" fileName="$(filebase).stats.log">
            <log spec="TypedNetworkStatsLogger" network="@mappedNet">
            </log>
        </logger> 

    </run>

</beast>

